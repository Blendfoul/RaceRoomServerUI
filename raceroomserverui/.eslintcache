[{"C:\\Users\\ACER\\Documents\\GitHub\\RaceRoomServerUI\\raceroomserverui\\src\\index.js":"1","C:\\Users\\ACER\\Documents\\GitHub\\RaceRoomServerUI\\raceroomserverui\\src\\reportWebVitals.js":"2","C:\\Users\\ACER\\Documents\\GitHub\\RaceRoomServerUI\\raceroomserverui\\src\\App.jsx":"3","C:\\Users\\ACER\\Documents\\GitHub\\RaceRoomServerUI\\raceroomserverui\\src\\components\\HeaderContainer.jsx":"4","C:\\Users\\ACER\\Documents\\GitHub\\RaceRoomServerUI\\raceroomserverui\\src\\components\\Race.jsx":"5","C:\\Users\\ACER\\Documents\\GitHub\\RaceRoomServerUI\\raceroomserverui\\src\\components\\RaceContainer.jsx":"6","C:\\Users\\ACER\\Documents\\GitHub\\RaceRoomServerUI\\raceroomserverui\\src\\components\\RaceContext.jsx":"7","C:\\Users\\ACER\\Documents\\GitHub\\RaceRoomServerUI\\raceroomserverui\\src\\components\\TrackDetails.jsx":"8","C:\\Users\\ACER\\Documents\\GitHub\\RaceRoomServerUI\\raceroomserverui\\src\\components\\SessionDetails.jsx":"9","C:\\Users\\ACER\\Documents\\GitHub\\RaceRoomServerUI\\raceroomserverui\\src\\components\\RankedDetails.jsx":"10","C:\\Users\\ACER\\Documents\\GitHub\\RaceRoomServerUI\\raceroomserverui\\src\\components\\DriverList.jsx":"11","C:\\Users\\ACER\\Documents\\GitHub\\RaceRoomServerUI\\raceroomserverui\\src\\components\\CarClasses.jsx":"12"},{"size":547,"mtime":1610570523106,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"14"},{"size":528,"mtime":1610584349843,"results":"16","hashOfConfig":"14"},{"size":1271,"mtime":1610586190926,"results":"17","hashOfConfig":"14"},{"size":2613,"mtime":1610588614862,"results":"18","hashOfConfig":"14"},{"size":1254,"mtime":1610584468732,"results":"19","hashOfConfig":"14"},{"size":413,"mtime":1610579911928,"results":"20","hashOfConfig":"14"},{"size":3210,"mtime":1610634487256,"results":"21","hashOfConfig":"14"},{"size":3612,"mtime":1610645938148,"results":"22","hashOfConfig":"14"},{"size":1859,"mtime":1610643166393,"results":"23","hashOfConfig":"14"},{"size":1607,"mtime":1610621848896,"results":"24","hashOfConfig":"14"},{"size":1059,"mtime":1610637082973,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1l5nslo",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\ACER\\Documents\\GitHub\\RaceRoomServerUI\\raceroomserverui\\src\\index.js",[],["53","54"],"C:\\Users\\ACER\\Documents\\GitHub\\RaceRoomServerUI\\raceroomserverui\\src\\reportWebVitals.js",[],"C:\\Users\\ACER\\Documents\\GitHub\\RaceRoomServerUI\\raceroomserverui\\src\\App.jsx",[],"C:\\Users\\ACER\\Documents\\GitHub\\RaceRoomServerUI\\raceroomserverui\\src\\components\\HeaderContainer.jsx",[],"C:\\Users\\ACER\\Documents\\GitHub\\RaceRoomServerUI\\raceroomserverui\\src\\components\\Race.jsx",[],"C:\\Users\\ACER\\Documents\\GitHub\\RaceRoomServerUI\\raceroomserverui\\src\\components\\RaceContainer.jsx",["55"],"import React, {useEffect, useContext, useState} from \"react\";\r\nimport {Col, Row, Spinner} from \"reactstrap\";\r\nimport axios from 'axios';\r\nimport Race from \"./Race\";\r\nimport {RaceContext} from \"./RaceContext\";\r\n\r\nconst RaceContainer = () => {\r\n    const [data, setData] = useContext(RaceContext);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            setIsLoading(true);\r\n            const response = await axios(`/server/${data.region}`);\r\n\r\n            const races = await response.data.result;\r\n            setData({...data, races: races});\r\n            setIsLoading(false);\r\n        };\r\n\r\n        fetchData();\r\n    }, [data.region]);\r\n\r\n    return (\r\n        isLoading\r\n            ?\r\n            <Row className={\"mt-5\"}>\r\n                <Col className=\"d-flex justify-content-center align-items-center\">\r\n                    <Spinner style={{width: '3rem', height: '3rem'}}/>{' '}\r\n                </Col>\r\n            </Row>\r\n            :\r\n            <Row className={\"mt-3\"}>\r\n                {\r\n                    data.races.map((race, index) => <Race data={race} key={index}/>)\r\n                }\r\n            </Row>\r\n    );\r\n};\r\n\r\nexport default RaceContainer;\r\n","C:\\Users\\ACER\\Documents\\GitHub\\RaceRoomServerUI\\raceroomserverui\\src\\components\\RaceContext.jsx",[],"C:\\Users\\ACER\\Documents\\GitHub\\RaceRoomServerUI\\raceroomserverui\\src\\components\\TrackDetails.jsx",["56"],"import React, {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport {Button, Col, Collapse, Row, Spinner} from \"reactstrap\";\r\n\r\nconst TrackDetails = props => {\r\n    const [details, setDetails] = useState({image: {logo: \"\"}, content_info: {name: \"\"}});\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    const toggle = () => setIsOpen(!isOpen);\r\n\r\n    const trackLayout = async (tracks) => {\r\n        let trackData = undefined;\r\n\r\n        for (const track in tracks) {\r\n            trackData = tracks[track].layouts.find(value => value.Id === props.id);\r\n            if( trackData !== undefined)\r\n                break;\r\n        }\r\n\r\n        const response = await axios(\"/tracks/image/\" + tracks[`${trackData?.Track}`].Name.replace(\" \", \"-\").toLowerCase());\r\n\r\n        const logo = response.data;\r\n\r\n        return {track: tracks[`${trackData?.Track}`], layout: trackData, logo: logo};\r\n    };\r\n\r\n    useEffect(() => {\r\n        const fetchDetails = async () => {\r\n            await setIsLoading(true);\r\n            const response = await axios('tracks');\r\n\r\n            const data = await response.data;\r\n\r\n            const trackDetails = await trackLayout(data);\r\n\r\n            setDetails(trackDetails);\r\n            await setIsLoading(false);\r\n        }\r\n\r\n        fetchDetails();\r\n    }, [props.id]);\r\n\r\n\r\n    return(\r\n        <Row>\r\n            <Button color={\"default\"} block={true} onClick={toggle}>\r\n                <h5 className=\"text-center dropdown-toggle\">Track Info</h5>\r\n            </Button>\r\n            <Collapse isOpen={isOpen} className={\"w-100\"}>\r\n                {isLoading\r\n                    ?\r\n                    <Row>\r\n                        <Col className=\"d-flex justify-content-center\">\r\n                        <Spinner style={{width: '3rem', height: '3rem'}}/>{' '}\r\n                        </Col>\r\n                    </Row>\r\n                    :\r\n                    <div>\r\n                        <Row className={\"justify-content-center\"}>\r\n                            <img src={details.logo} className={\"img-fluid w-25\"} alt={details.track.Name}/>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col xs={6}>\r\n                                <h6 className=\"text-center font-weight-bold\">Name</h6>\r\n                                <p className=\"text-center\">{details.track.Name}</p>\r\n                            </Col>\r\n                            <Col xs={6}>\r\n                                <h6 className=\"text-center font-weight-bold\">Layout</h6>\r\n                                <p className=\"text-center\">{details.layout.Name}</p>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                                <h6 className=\"text-center font-weight-bold\">Max Players</h6>\r\n                                <p className=\"text-center\">{props.maxPlayers}</p>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                }\r\n            </Collapse>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default TrackDetails;\r\n","C:\\Users\\ACER\\Documents\\GitHub\\RaceRoomServerUI\\raceroomserverui\\src\\components\\SessionDetails.jsx",["57"],"C:\\Users\\ACER\\Documents\\GitHub\\RaceRoomServerUI\\raceroomserverui\\src\\components\\RankedDetails.jsx",[],"C:\\Users\\ACER\\Documents\\GitHub\\RaceRoomServerUI\\raceroomserverui\\src\\components\\DriverList.jsx",[],"C:\\Users\\ACER\\Documents\\GitHub\\RaceRoomServerUI\\raceroomserverui\\src\\components\\CarClasses.jsx",["58"],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":22,"column":8,"nodeType":"65","endLine":22,"endColumn":21,"suggestions":"66"},{"ruleId":"63","severity":1,"message":"67","line":42,"column":8,"nodeType":"65","endLine":42,"endColumn":18,"suggestions":"68"},{"ruleId":"63","severity":1,"message":"69","line":19,"column":8,"nodeType":"65","endLine":19,"endColumn":10,"suggestions":"70"},{"ruleId":"63","severity":1,"message":"71","line":17,"column":8,"nodeType":"65","endLine":17,"endColumn":10,"suggestions":"72"},"no-native-reassign",["73"],"no-negated-in-lhs",["74"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'data' and 'setData'. Either include them or remove the dependency array.","ArrayExpression",["75"],"React Hook useEffect has a missing dependency: 'trackLayout'. Either include it or remove the dependency array.",["76"],"React Hook useEffect has a missing dependency: 'props.currentSession'. Either include it or remove the dependency array.",["77"],"React Hook useEffect has a missing dependency: 'props.liveries'. Either include it or remove the dependency array.",["78"],"no-global-assign","no-unsafe-negation",{"desc":"79","fix":"80"},{"desc":"81","fix":"82"},{"desc":"83","fix":"84"},{"desc":"85","fix":"86"},"Update the dependencies array to be: [data, data.region, setData]",{"range":"87","text":"88"},"Update the dependencies array to be: [props.id, trackLayout]",{"range":"89","text":"90"},"Update the dependencies array to be: [props.currentSession]",{"range":"91","text":"92"},"Update the dependencies array to be: [props.liveries]",{"range":"93","text":"94"},[702,715],"[data, data.region, setData]",[1371,1381],"[props.id, trackLayout]",[724,726],"[props.currentSession]",[495,497],"[props.liveries]"]