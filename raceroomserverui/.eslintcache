[{"C:\\Users\\ACER\\Documents\\GitHub\\RaceRoomServerUI\\raceroomserverui\\src\\index.js":"1","C:\\Users\\ACER\\Documents\\GitHub\\RaceRoomServerUI\\raceroomserverui\\src\\reportWebVitals.js":"2","C:\\Users\\ACER\\Documents\\GitHub\\RaceRoomServerUI\\raceroomserverui\\src\\App.jsx":"3","C:\\Users\\ACER\\Documents\\GitHub\\RaceRoomServerUI\\raceroomserverui\\src\\components\\HeaderContainer.jsx":"4","C:\\Users\\ACER\\Documents\\GitHub\\RaceRoomServerUI\\raceroomserverui\\src\\components\\Race.jsx":"5","C:\\Users\\ACER\\Documents\\GitHub\\RaceRoomServerUI\\raceroomserverui\\src\\components\\RaceContainer.jsx":"6","C:\\Users\\ACER\\Documents\\GitHub\\RaceRoomServerUI\\raceroomserverui\\src\\components\\RaceContext.jsx":"7","C:\\Users\\ACER\\Documents\\GitHub\\RaceRoomServerUI\\raceroomserverui\\src\\components\\TrackDetails.jsx":"8","C:\\Users\\ACER\\Documents\\GitHub\\RaceRoomServerUI\\raceroomserverui\\src\\components\\SessionDetails.jsx":"9","C:\\Users\\ACER\\Documents\\GitHub\\RaceRoomServerUI\\raceroomserverui\\src\\components\\RankedDetails.jsx":"10","C:\\Users\\ACER\\Documents\\GitHub\\RaceRoomServerUI\\raceroomserverui\\src\\components\\DriverList.jsx":"11","C:\\Users\\ACER\\Documents\\GitHub\\RaceRoomServerUI\\raceroomserverui\\src\\components\\CarClasses.jsx":"12","C:\\Users\\ACER\\Documents\\GitHub\\RaceRoomServerUI\\raceroomserverui\\src\\components\\DriverItem.jsx":"13","C:\\Users\\ACER\\Documents\\GitHub\\RaceRoomServerUI\\raceroomserverui\\src\\components\\DriverContainer.jsx":"14","C:\\Users\\ACER\\Documents\\GitHub\\RaceRoomServerUI\\raceroomserverui\\src\\components\\DriverHeader.jsx":"15","C:\\Users\\ACER\\Documents\\GitHub\\RaceRoomServerUI\\raceroomserverui\\src\\components\\RaceTable.jsx":"16","C:\\Users\\ACER\\Documents\\GitHub\\RaceRoomServerUI\\raceroomserverui\\src\\components\\ScheduleModal.jsx":"17","C:\\Users\\ACER\\Documents\\GitHub\\RaceRoomServerUI\\raceroomserverui\\src\\components\\RatingContainer.jsx":"18","C:\\Users\\ACER\\Documents\\GitHub\\RaceRoomServerUI\\raceroomserverui\\src\\components\\BackRouter.jsx":"19"},{"size":555,"mtime":1610704414967,"results":"20","hashOfConfig":"21"},{"size":375,"mtime":1610654900967,"results":"22","hashOfConfig":"21"},{"size":1253,"mtime":1610735334646,"results":"23","hashOfConfig":"21"},{"size":3172,"mtime":1610740378988,"results":"24","hashOfConfig":"21"},{"size":2871,"mtime":1610740407892,"results":"25","hashOfConfig":"21"},{"size":1528,"mtime":1610736158989,"results":"26","hashOfConfig":"21"},{"size":413,"mtime":1610654837927,"results":"27","hashOfConfig":"21"},{"size":3210,"mtime":1610654901036,"results":"28","hashOfConfig":"21"},{"size":3612,"mtime":1610654901035,"results":"29","hashOfConfig":"21"},{"size":1859,"mtime":1610654901034,"results":"30","hashOfConfig":"21"},{"size":1321,"mtime":1610661829815,"results":"31","hashOfConfig":"21"},{"size":1322,"mtime":1610736350883,"results":"32","hashOfConfig":"21"},{"size":539,"mtime":1610666508459,"results":"33","hashOfConfig":"21"},{"size":1876,"mtime":1610736172383,"results":"34","hashOfConfig":"21"},{"size":2243,"mtime":1610706643381,"results":"35","hashOfConfig":"21"},{"size":2594,"mtime":1610706821948,"results":"36","hashOfConfig":"21"},{"size":882,"mtime":1610740379005,"results":"37","hashOfConfig":"21"},{"size":897,"mtime":1610739859452,"results":"38","hashOfConfig":"21"},{"size":518,"mtime":1610735854304,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1l5nslo",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"C:\\Users\\ACER\\Documents\\GitHub\\RaceRoomServerUI\\raceroomserverui\\src\\index.js",[],["83","84"],"C:\\Users\\ACER\\Documents\\GitHub\\RaceRoomServerUI\\raceroomserverui\\src\\reportWebVitals.js",[],"C:\\Users\\ACER\\Documents\\GitHub\\RaceRoomServerUI\\raceroomserverui\\src\\App.jsx",[],"C:\\Users\\ACER\\Documents\\GitHub\\RaceRoomServerUI\\raceroomserverui\\src\\components\\HeaderContainer.jsx",["85"],"C:\\Users\\ACER\\Documents\\GitHub\\RaceRoomServerUI\\raceroomserverui\\src\\components\\Race.jsx",[],"C:\\Users\\ACER\\Documents\\GitHub\\RaceRoomServerUI\\raceroomserverui\\src\\components\\RaceContainer.jsx",["86"],"C:\\Users\\ACER\\Documents\\GitHub\\RaceRoomServerUI\\raceroomserverui\\src\\components\\RaceContext.jsx",[],"C:\\Users\\ACER\\Documents\\GitHub\\RaceRoomServerUI\\raceroomserverui\\src\\components\\TrackDetails.jsx",["87"],"import React, {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport {Button, Col, Collapse, Row, Spinner} from \"reactstrap\";\r\n\r\nconst TrackDetails = props => {\r\n    const [details, setDetails] = useState({image: {logo: \"\"}, content_info: {name: \"\"}});\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    const toggle = () => setIsOpen(!isOpen);\r\n\r\n    const trackLayout = async (tracks) => {\r\n        let trackData = undefined;\r\n\r\n        for (const track in tracks) {\r\n            trackData = tracks[track].layouts.find(value => value.Id === props.id);\r\n            if( trackData !== undefined)\r\n                break;\r\n        }\r\n\r\n        const response = await axios(\"/tracks/image/\" + tracks[`${trackData?.Track}`].Name.replace(\" \", \"-\").toLowerCase());\r\n\r\n        const logo = response.data;\r\n\r\n        return {track: tracks[`${trackData?.Track}`], layout: trackData, logo: logo};\r\n    };\r\n\r\n    useEffect(() => {\r\n        const fetchDetails = async () => {\r\n            await setIsLoading(true);\r\n            const response = await axios('tracks');\r\n\r\n            const data = await response.data;\r\n\r\n            const trackDetails = await trackLayout(data);\r\n\r\n            setDetails(trackDetails);\r\n            await setIsLoading(false);\r\n        }\r\n\r\n        fetchDetails();\r\n    }, [props.id]);\r\n\r\n\r\n    return(\r\n        <Row>\r\n            <Button color={\"default\"} block={true} onClick={toggle}>\r\n                <h5 className=\"text-center dropdown-toggle\">Track Info</h5>\r\n            </Button>\r\n            <Collapse isOpen={isOpen} className={\"w-100\"}>\r\n                {isLoading\r\n                    ?\r\n                    <Row>\r\n                        <Col className=\"d-flex justify-content-center\">\r\n                        <Spinner style={{width: '3rem', height: '3rem'}}/>{' '}\r\n                        </Col>\r\n                    </Row>\r\n                    :\r\n                    <div>\r\n                        <Row className={\"justify-content-center\"}>\r\n                            <img src={details.logo} className={\"img-fluid w-25\"} alt={details.track.Name}/>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col xs={6}>\r\n                                <h6 className=\"text-center font-weight-bold\">Name</h6>\r\n                                <p className=\"text-center\">{details.track.Name}</p>\r\n                            </Col>\r\n                            <Col xs={6}>\r\n                                <h6 className=\"text-center font-weight-bold\">Layout</h6>\r\n                                <p className=\"text-center\">{details.layout.Name}</p>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                                <h6 className=\"text-center font-weight-bold\">Max Players</h6>\r\n                                <p className=\"text-center\">{props.maxPlayers}</p>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                }\r\n            </Collapse>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default TrackDetails;\r\n","C:\\Users\\ACER\\Documents\\GitHub\\RaceRoomServerUI\\raceroomserverui\\src\\components\\SessionDetails.jsx",["88"],"import React, {useState, useEffect} from 'react';\r\nimport {Button, Col, Collapse, Row} from \"reactstrap\";\r\nimport Countdown from \"react-countdown\";\r\nimport CarClasses from \"./CarClasses\";\r\n\r\nconst SessionDetails = props => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [session, setSession] = useState(\"\");\r\n    const [timeLeft] = useState(Date.now() + props.timeLeft);\r\n    const toggle = () => setIsOpen(!isOpen);\r\n\r\n    useEffect(() => {\r\n        switch (props.currentSession) {\r\n            case 0: setSession(\"Pratice\"); break;\r\n            case 256: setSession(\"Qualify\"); break;\r\n            case 768: setSession(\"Race\"); break;\r\n            default: setSession(\"Unknown\"); break;\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <Row>\r\n            <Button color={\"default\"} block={true} onClick={toggle}>\r\n                <h5 className=\"text-center dropdown-toggle\">Session Details</h5>\r\n            </Button>\r\n            <Collapse isOpen={isOpen} className={\"w-100\"}>\r\n                <Row className={\"mt-3\"}>\r\n                    <Col xs={6} >\r\n                        <h6 className=\"text-center font-weight-bold\">Session</h6>\r\n                        <p className=\"text-center\">{session}</p>\r\n                    </Col>\r\n                    <Col xs={6} className={\"d-flex flex-column justify-content-start align-items-center\"}>\r\n                        <h6 className=\"text-center font-weight-bold\">Time Left</h6>\r\n                        <Countdown className={\"text-center\"} date={timeLeft}/>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col xs={4}>\r\n                        <h6 className=\"text-center font-weight-bold\">P</h6>\r\n                        <p className=\"text-center\">{props.session.PracticeDuration} min</p>\r\n                    </Col>\r\n                    <Col xs={4}>\r\n                        <h6 className=\"text-center font-weight-bold\">Q</h6>\r\n                        <p className=\"text-center\">{props.session.QualifyDuration} min</p>\r\n                    </Col>\r\n                    <Col xs={4}>\r\n                        <h6 className=\"text-center font-weight-bold\">R</h6>\r\n                        <p className=\"text-center\">{props.session.Race1Duration} min</p>\r\n                    </Col>\r\n                    {props.session.Race2Duration !== 0 ?\r\n                        <Col xs={4}>\r\n                            <h6 className=\"text-center font-weight-bold\">R2</h6>\r\n                            <p className=\"text-center\">{props.session.Race2Duration} min</p>\r\n                        </Col> : \"\"}\r\n\r\n                    {props.session.Race3Duration !== 0 ?\r\n                        <Col xs={4}>\r\n                            <h6 className=\"text-center font-weight-bold\">R3</h6>\r\n                            <p className=\"text-center\">{props.session.Race3Duration} min</p>\r\n                        </Col> : \"\"}\r\n                </Row>\r\n                <Row className=\"mt-3\">\r\n                    <Col xs={6}>\r\n                        <h6 className=\"text-center font-weight-bold\">Tyre Wear</h6>\r\n                        <p className=\"text-center\">{props.session.TireWear}x</p>\r\n                    </Col>\r\n                    <Col xs={6}>\r\n                        <h6 className=\"text-center font-weight-bold\">Fuel Usage</h6>\r\n                        <p className=\"text-center\">{props.session.FuelUsage}x</p>\r\n                    </Col>\r\n                </Row>\r\n                <CarClasses liveries={props.session.LiveryId} />\r\n            </Collapse>\r\n        </Row>\r\n    )\r\n};\r\n\r\nexport default SessionDetails;\r\n","C:\\Users\\ACER\\Documents\\GitHub\\RaceRoomServerUI\\raceroomserverui\\src\\components\\RankedDetails.jsx",[],"C:\\Users\\ACER\\Documents\\GitHub\\RaceRoomServerUI\\raceroomserverui\\src\\components\\DriverList.jsx",[],"C:\\Users\\ACER\\Documents\\GitHub\\RaceRoomServerUI\\raceroomserverui\\src\\components\\CarClasses.jsx",["89"],"C:\\Users\\ACER\\Documents\\GitHub\\RaceRoomServerUI\\raceroomserverui\\src\\components\\DriverItem.jsx",[],"C:\\Users\\ACER\\Documents\\GitHub\\RaceRoomServerUI\\raceroomserverui\\src\\components\\DriverContainer.jsx",["90"],"C:\\Users\\ACER\\Documents\\GitHub\\RaceRoomServerUI\\raceroomserverui\\src\\components\\DriverHeader.jsx",[],"C:\\Users\\ACER\\Documents\\GitHub\\RaceRoomServerUI\\raceroomserverui\\src\\components\\RaceTable.jsx",["91"],"import React from 'react';\r\nimport {Row, Table} from \"reactstrap\";\r\n\r\nconst RaceTable = props => {\r\n    const races = props.races;\r\n    return (\r\n        <Row>\r\n            <div style={{maxHeight: '550px', width: \"100%\", overflowY: 'auto'}}>\r\n                <Table responsive hover borderless>\r\n                    <thead>\r\n                    <tr>\r\n                        <th className={\"text-center\"}>Class</th>\r\n                        <th className={\"text-center\"}>Start Position</th>\r\n                        <th className={\"text-center\"}>Finish Position</th>\r\n                        <th className={\"text-center\"}>Incidents</th>\r\n                        <th className={\"text-center\"}>Drivers</th>\r\n                        <th className={\"text-center\"}>Rating +/-</th>\r\n                        <th className={\"text-center\"}>Reputation +/-</th>\r\n                        <th className={\"text-center\"}>Rating</th>\r\n                        <th className={\"text-center\"}>Reputation</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {\r\n                        races.reverse().map((race, index) =>\r\n                            <tr key={index}>\r\n                                <td className={\"text-center\"} scope=\"row\">\r\n                                    {race.CarClasses.map((value, index) => <img src={`https://game.raceroom.com/store/image_redirect?id=${value.Id}&amp;size=thumb`} style={{width: \"12.5%\"}} alt=\"\" key={\"class-\"+index}/>)}\r\n                                </td>\r\n                                <td className={\"text-center\"}>{race.StartPosition}</td>\r\n                                <td className={\"text-center\"}>{race.FinishPosition}</td>\r\n                                <td className={\"text-center\"}>{race.IncidentPoints}</td>\r\n                                <td className={\"text-center\"}>{race.PlayersCount}</td>\r\n                                <td className={`text-center ${race.RatingChange > 0 ? \"bg-success\" : \"bg-danger\"}`}>{race.RatingChange}</td>\r\n                                <td className={`text-center ${race.ReputationChange > 0 ? \"bg-success\" : \"bg-danger\"}`}>{race.ReputationChange}</td>\r\n                                <td className={\"text-center\"}>{race.RatingAfter}</td>\r\n                                <td className={\"text-center\"}>{race.ReputationAfter}</td>\r\n                            </tr>\r\n                        )\r\n                    }\r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n        </Row>\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default RaceTable;\r\n","C:\\Users\\ACER\\Documents\\GitHub\\RaceRoomServerUI\\raceroomserverui\\src\\components\\ScheduleModal.jsx",["92","93","94"],"import React from 'react';\r\nimport {Col, Container, Modal, ModalBody, ModalHeader, Row} from \"reactstrap\";\r\n\r\nconst ScheduleModal = props => {\r\n    return (\r\n        <Modal isOpen={props.isOpen} toggle={props.toggle} centered size={\"lg\"}>\r\n            <ModalHeader toggle={props.toggle}>Weekly Schedule</ModalHeader>\r\n            <ModalBody>\r\n                <Container fluid>\r\n                    <Row>\r\n                        <Col>\r\n                            <img src=\"https://evosupport.raceroom.com/index.php/apps/files_sharing/publicpreview/tne8CWb45oQmcTx?file=/schedule%20post.png&amp;x=1000&amp;y=1080&amp;a=true&amp;c=2021-01-15 15:08:54 +01:00\" className={\"img-fluid\"} alt={\"Schedule\"}/>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </ModalBody>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default  ScheduleModal;\r\n","C:\\Users\\ACER\\Documents\\GitHub\\RaceRoomServerUI\\raceroomserverui\\src\\components\\RatingContainer.jsx",[],"C:\\Users\\ACER\\Documents\\GitHub\\RaceRoomServerUI\\raceroomserverui\\src\\components\\BackRouter.jsx",[],{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":1,"column":35,"nodeType":"101","messageId":"102","endLine":1,"endColumn":48},{"ruleId":"103","severity":1,"message":"104","line":35,"column":8,"nodeType":"105","endLine":35,"endColumn":21,"suggestions":"106"},{"ruleId":"103","severity":1,"message":"107","line":42,"column":8,"nodeType":"105","endLine":42,"endColumn":18,"suggestions":"108"},{"ruleId":"103","severity":1,"message":"109","line":19,"column":8,"nodeType":"105","endLine":19,"endColumn":10,"suggestions":"110"},{"ruleId":"103","severity":1,"message":"111","line":28,"column":8,"nodeType":"105","endLine":28,"endColumn":10,"suggestions":"112"},{"ruleId":"103","severity":1,"message":"113","line":39,"column":8,"nodeType":"105","endLine":39,"endColumn":10,"suggestions":"114"},{"ruleId":"115","severity":1,"message":"116","line":27,"column":63,"nodeType":"117","endLine":27,"endColumn":74},{"ruleId":"99","severity":1,"message":"118","line":2,"column":9,"nodeType":"101","messageId":"102","endLine":2,"endColumn":15},{"ruleId":"99","severity":1,"message":"119","line":2,"column":51,"nodeType":"101","messageId":"102","endLine":2,"endColumn":62},{"ruleId":"120","severity":1,"message":"121","line":12,"column":29,"nodeType":"122","endLine":12,"endColumn":248},"no-native-reassign",["123"],"no-negated-in-lhs",["124"],"no-unused-vars","'PopoverHeader' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'data' and 'setData'. Either include them or remove the dependency array.","ArrayExpression",["125"],"React Hook useEffect has a missing dependency: 'trackLayout'. Either include it or remove the dependency array.",["126"],"React Hook useEffect has a missing dependency: 'props.currentSession'. Either include it or remove the dependency array.",["127"],"React Hook useEffect has a missing dependency: 'props.liveries'. Either include it or remove the dependency array.",["128"],"React Hook useEffect has a missing dependency: 'userName'. Either include it or remove the dependency array.",["129"],"jsx-a11y/scope","The scope prop can only be used on <th> elements.","JSXAttribute","'Button' is defined but never used.","'ModalFooter' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"130","fix":"131"},{"desc":"132","fix":"133"},{"desc":"134","fix":"135"},{"desc":"136","fix":"137"},{"desc":"138","fix":"139"},"Update the dependencies array to be: [data, data.region, setData]",{"range":"140","text":"141"},"Update the dependencies array to be: [props.id, trackLayout]",{"range":"142","text":"143"},"Update the dependencies array to be: [props.currentSession]",{"range":"144","text":"145"},"Update the dependencies array to be: [props.liveries]",{"range":"146","text":"147"},"Update the dependencies array to be: [userName]",{"range":"148","text":"149"},[976,989],"[data, data.region, setData]",[1371,1381],"[props.id, trackLayout]",[724,726],"[props.currentSession]",[758,760],"[props.liveries]",[1049,1051],"[userName]"]